{{- $secName := printf "%s-%s" .Values.global.projectName "app" -}}
{{- if and .Values.global.enabled .Values.web.enabled .Values.global.externalSecrets.enabled -}}
apiVersion: 'kubernetes-client.io/v1'
kind: ExternalSecret
metadata:
  name: {{ .Values.global.projectName }}-secrets
  {{ if .Values.global.namespace }}
  namespace: {{ .Values.global.namespace }}
  {{ else }}
  namespace: {{ .Release.Namespace }}
  {{ end }}
spec:
  backendType: vault
  # Your authentication mount point, e.g. "kubernetes"
  vaultMountPoint: {{ .Values.global.externalSecrets.clusterName }}
  # The vault role that will be used to fetch the secrets
  # This role will need to be bound to kubernetes-external-secret's ServiceAccount; see Vault's documentation:
  # https://www.vaultproject.io/docs/auth/kubernetes.html
  vaultRole: {{ .Values.global.externalSecrets.clusterName }}-role
  dataFrom:
    {{- if .Values.global.externalSecrets.review }}
    - {{ .Values.global.externalSecrets.clusterName }}/data/{{ .Values.global.projectName }}-review/{{ .Release.Namespace }}/secrets
    {{- else }}
    - {{ .Values.global.externalSecrets.clusterName }}/data/{{ .Values.global.namespace }}/{{ .Values.global.projectName }}/secrets
    {{ end }}
{{- end }}